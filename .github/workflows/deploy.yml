deploy:
  needs: build
  runs-on: ubuntu-latest

  steps:
    - name: Download Artifact
      uses: actions/download-artifact@v4
      with:
        name: ktor-app
        path: .

    - name: Test SSH Connection
      run: |
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > private_key
        chmod 600 private_key
        # Add EC2 host key to known_hosts to prevent host verification error
        mkdir -p ~/.ssh
        ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
        ssh -i private_key ec2-user@${{ secrets.SSH_HOST }} 'echo "SSH connection works!"'

    - name: Deploy to EC2
      env:
        SSH_HOST: ${{ secrets.SSH_HOST }}
        SSH_USER: ${{ secrets.SSH_USER }}
        SSH_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      run: |
        # Prepare SSH private key
        echo "$SSH_KEY" > private_key && chmod 600 private_key
        
        # Add EC2 host key to known_hosts to prevent host verification error
        mkdir -p ~/.ssh
        ssh-keyscan -H $SSH_HOST >> ~/.ssh/known_hosts

        # Copy the artifact (JAR file) to EC2
        scp -i private_key *.jar $SSH_USER@$SSH_HOST:/home/$SSH_USER/ktor-app.jar

    - name: Restart Ktor Server
      env:
        SSH_HOST: ${{ secrets.SSH_HOST }}
        SSH_USER: ${{ secrets.SSH_USER }}
        SSH_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      run: |
        # SSH into EC2 and restart the Ktor server
        ssh -i private_key $SSH_USER@$SSH_HOST << 'EOF'
        pkill -f 'java -jar' || true
        nohup java -jar /home/$SSH_USER/ktor-app.jar > log.txt 2>&1 &
        EOF
